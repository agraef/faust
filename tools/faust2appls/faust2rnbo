#! /bin/bash -e
set -e

#####################################################################
#                                                                   #
#               Compiles Faust programs to RNBO                     #
#               (c) Grame, 20203                                    #
#                                                                   #
#####################################################################

. faustpath
. faustoptflags
. usage.sh

ARCHFILE=$FAUSTARCH/max-msp/rnbo.py
COMPILE=False
EXPORT_PATH="/tmp/foo"
EXPORT_FILENAME="foo.cpp"
TEST=False

echoHelp() 
{
    usage faust2rnbo "[options] [Faust options] <file.dsp>"
    echo  "Compiles Faust programs to RNBO patches"
    option
    option -compile "to trigger C++ compilation at load time"
    option -test "to generate special 'RB_XX' prefix for parameters (for testing)"
    option "-cpp_path <path>"
    option "-cpp_filename <filename>"
    option "Faust options"
    exit
}

if [ "$#" -eq 0 ]; then
    echo 'Please, provide a Faust file to process !'
    echo ''
    echoHelp
fi

#-------------------------------------------------------------------
# dispatch command arguments
#-------------------------------------------------------------------

OPTIONS=""

while [ $1 ]
do
    p=$1

    if [ $p = "-help" ] || [ $p = "-h" ]; then
        echoHelp
    fi

    if [ $p = "-compile" ]; then
        COMPILE=True
    elif [ $p = "-test" ]; then
        TEST=True
    elif [ $p = "-cpp_path" ]; then
        shift
        EXPORT_PATH=$1
    elif [ $p = "-cpp_filename" ]; then
        shift
        EXPORT_FILENAME=$1
    elif [ ${p:0:1} = "-" ]; then
        OPTIONS="$OPTIONS $p"
    elif [[ -f "$p" ]] && [ ${p: -4} == ".dsp" ]; then
        FILES="$FILES $p"
    else
        OPTIONS="$OPTIONS $p"
    fi

shift

done

#-------------------------------------------------------------------
# compile the *.dsp files
#-------------------------------------------------------------------

for f in $FILES; do

    # compile the DSP to codebox using the architecture file
    if [ "$TEST" = "True" ]; then
        faust $OPTIONS "$f" -lang codebox-test -double -json -o "${f%.dsp}.codebox" || exit
    else
        faust $OPTIONS "$f" -lang codebox -double -json -o "${f%.dsp}.codebox" || exit
    fi
    # compile codebox and JSON file to maxpat
    python3 $ARCHFILE "${f%.dsp}" "${f%.dsp}.codebox" "$f.json" "${f%.dsp}.maxpat" $EXPORT_PATH $EXPORT_FILENAME $COMPILE $TEST 
  
    # remove temporary files
    rm -f "${f%.dsp}.codebox" "$f.json"

    # collect binary file name for FaustWorks
    BINARIES="$BINARIES${f%.dsp}.maxpat;"
done

echo $BINARIES

